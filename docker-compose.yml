# Use root/example as user/password credentials
version: '3.1'

services:
    # nest container
    nest:
        build:
            context: docker/nest
            dockerfile: dev.Dockerfile
        volumes:
            - ./nest:/var/www
            - nest_node_modules:/var/www/node_modules
        networks:
            - app-network
        environment:
            - CHOKIDAR_USEPOLLING=true

    # PostgreSQL database
    postgres:
        hostname: postgres
        build:
            context: docker/postgres
            dockerfile: Dockerfile
        volumes:
            # Database volume
            - database:/var/lib/postgresql/data
        ports:
            - 54321:5432
        environment:
            - LC_ALL=C.UTF-8
            - POSTGRES_DB=app
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=app
        networks:
            - app-network

    # pgadmin service
    pgadmin:
        build:
            context: docker/pgadmin
            dockerfile: Dockerfile
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@prestoheads.com
            - PGADMIN_DEFAULT_PASSWORD=app
            - PGADMIN_CONFIG_SERVER_MODE=False
        volumes:
            - ./docker/pgadmin/data:/var/lib/pgadmin
        ports:
            - "5050:80"
        networks:
            - app-network

    # Redis
    redis:
        hostname: redis
        build:
            context: docker/redis
            dockerfile: Dockerfile
        ports:
            - "6379:6379"
        command:
            [
                "redis-server",
                "/usr/local/etc/redis/redis.conf",
                "--appendonly",
                "yes",
                "--requirepass",
                "${REDIS_PASSWORD}"
            ]
        volumes:
            - redis:/data
            - ./docker/redis/logs:/var/log
        networks:
            - app-network

    # Node container
    node:
        build:
            context: docker/node
            dockerfile: dev.Dockerfile
        volumes:
            - ./frontend:/var/www/frontend
            - nuxt_node_modules:/var/www/frontend/node_modules
        networks:
            - app-network
        stdin_open: true
        tty: true
        environment:
            - CHOKIDAR_USEPOLLING=true

    nginx:
        build:
            context: docker/nginx/dev
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www
            - ./docker/nginx/dev/conf.d/:/etc/nginx/conf.d/
            - ./docker/nginx/dev/logs:/var/log/nginx
        ports:
            # Nuxt port
            - ${APP_PORT}:80
        links:
            - node
            - nest
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    nuxt_node_modules:
        driver: local
    nest_node_modules:
        driver: local
    database:
        driver: local
    redis:
        driver: local
